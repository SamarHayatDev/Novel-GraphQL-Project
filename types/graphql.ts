import { GraphQLContext } from "../lib/context";

// Simple GraphQL resolvers type
export interface GraphQLResolvers {
  Query: {
    me?: any;
    user?: any;
    users?: any;
    author?: any;
    authors?: any;
    searchAuthors?: any;
    category?: any;
    categoryBySlug?: any;
    categories?: any;
    tag?: any;
    tagBySlug?: any;
    tags?: any;
    searchTags?: any;
    novel?: any;
    novels?: any;
    searchNovels?: any;
    novelsByAuthor?: any;
    novelsByCategory?: any;
    novelsByTag?: any;
    chapter?: any;
    chapterByNovelAndNumber?: any;
    chaptersByNovel?: any;
    review?: any;
    reviewsByNovel?: any;
    reviewsByUser?: any;
    myFavorites?: any;
    myBookmarks?: any;
    myReadingProgress?: any;
    myCurrentReading?: any;
    myCompletedNovels?: any;
    isFavorited?: any;
    isBookmarked?: any;
    pendingReviews?: any;
    userStats?: any;
    novelStats?: any;
  };
  Mutation: {
    register?: any;
    login?: any;
    refreshToken?: any;
    logout?: any;
    updateProfile?: any;
    changePassword?: any;
    requestPasswordReset?: any;
    resetPassword?: any;
    verifyEmail?: any;
    requestEmailVerification?: any;
    createAuthor?: any;
    updateAuthor?: any;
    deleteAuthor?: any;
    createCategory?: any;
    updateCategory?: any;
    deleteCategory?: any;
    createTag?: any;
    updateTag?: any;
    deleteTag?: any;
    createNovel?: any;
    updateNovel?: any;
    deleteNovel?: any;
    publishNovel?: any;
    unpublishNovel?: any;
    createChapter?: any;
    updateChapter?: any;
    deleteChapter?: any;
    publishChapter?: any;
    unpublishChapter?: any;
    createReview?: any;
    updateReview?: any;
    deleteReview?: any;
    voteReview?: any;
    moderateReview?: any;
    toggleFavorite?: any;
    addBookmark?: any;
    removeBookmark?: any;
    updateReadingProgress?: any;
    uploadImage?: any;
  };
  User?: any;
  Author?: any;
  Category?: any;
  Tag?: any;
  Novel?: any;
  Chapter?: any;
  Review?: any;
  Favorite?: any;
  Bookmark?: any;
  ReadingProgress?: any;
}
